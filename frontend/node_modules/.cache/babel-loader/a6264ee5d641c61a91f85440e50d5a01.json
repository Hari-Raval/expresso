{"ast":null,"code":"var _jsxFileName = \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Card, Container, Header, Grid, Button, Radio, Form, Divider, Dimmer, Loader } from 'semantic-ui-react';\nimport ClientHeader from './ClientHeader';\nimport { postMakeOrder } from '../Axios/axios_getter';\nimport { getUser } from '../Axios/axios_getter';\n\nclass OrderPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      payment: true,\n      totalPrice: 0,\n      shoppingCart: [],\n      toBeRemoved: null,\n      emptyPopUp: false,\n      confirm: false,\n      remove: false,\n      loading: false\n    };\n\n    this.componentDidMount = () => {\n      if (JSON.parse(localStorage.getItem('shoppingCart')) !== null) {\n        this.setState({\n          shoppingCart: JSON.parse(localStorage.getItem('shoppingCart'))\n        });\n      }\n\n      this.setState({\n        totalPrice: this.getPrice()\n      });\n      getUser().then(user => {\n        console.log(user); // should it be user.user or user.username?\n\n        this.setState({\n          user: user.user\n        });\n      });\n    };\n\n    this.getPrice = () => {\n      let shoppingCart = this.state.shoppingCart;\n      let price = 0;\n\n      for (let i = 0; i < shoppingCart.length; i++) {\n        price += Number(shoppingCart[i].sp[1]);\n\n        for (let j = 0; j < shoppingCart[i].addons.length; j++) {\n          price += Number(shoppingCart[i].addons[j].price);\n        }\n      }\n\n      return price;\n    };\n\n    this.handleFilterItem = async id => {\n      await this.setState({\n        loading: true\n      });\n      await this.setState(prevState => {\n        let shoppingCart = prevState.shoppingCart;\n        shoppingCart = shoppingCart.filter(item => item.id !== id);\n        return {\n          shoppingCart\n        };\n      });\n      await this.setState({\n        loading: false\n      });\n    };\n\n    this.handleRemoveItem = id => {\n      this.setState({\n        toBeRemoved: id\n      });\n      this.setState({\n        remove: true\n      });\n    };\n\n    this.handleConfirmRemove = async () => {\n      await this.handleFilterItem(this.state.toBeRemoved);\n      this.setState({\n        totalPrice: this.getPrice()\n      });\n      this.handleCloseConfirmRemove();\n    };\n\n    this.emptyCart = () => {\n      this.setState({\n        shoppingCart: []\n      });\n    };\n\n    this.selectPayment = payment => {\n      this.setState({\n        payment: payment\n      });\n    };\n\n    this.handlePlaceOrder = () => {\n      this.setState({\n        confirm: true\n      });\n    };\n\n    this.postOrder = async payment => {\n      const shoppingCart = this.state.shoppingCart;\n      await this.setState({\n        loading: true\n      });\n      let items = [];\n\n      for (let i = 0; i < shoppingCart.length; i++) {\n        const item = shoppingCart[i];\n        let addons = [];\n\n        for (let j = 0; j < item.addons.length; j++) {\n          const addon = {\n            name: item.addons[j].name\n          };\n          addons.push(addon);\n        }\n\n        const update = {\n          item: {\n            name: item.item.name\n          },\n          addons: addons,\n          sp: item.sp[0]\n        };\n        items.push(update);\n      }\n\n      const finalUpdate = {\n        netid: this.state.user,\n        cost: this.getPrice(),\n        payment: payment,\n        status: payment,\n        items: items\n      };\n      postMakeOrder(this.state.user, finalUpdate).then(data => {\n        if (!data.availability) {\n          this.setState({\n            availabilityConfirm: true\n          });\n        }\n      });\n      await this.setState({\n        loading: false\n      });\n    };\n\n    this.handleConfirm = async () => {\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.shoppingCart.length === 0) {\n        this.setState({\n          emptyPopUp: true\n        });\n        this.handleCloseConfirm();\n        this.setState({\n          loading: false\n        });\n      } else {\n        await this.postOrder(this.state.payment);\n        await this.handleCloseConfirm();\n        await this.emptyCart();\n        await this.setState({\n          totalPrice: 0\n        });\n        await this.setState({\n          loading: false\n        });\n        this.props.history.push('/menu');\n      }\n    };\n\n    this.handleCloseEmpty = () => {\n      this.setState({\n        emptyPopUp: false\n      });\n    };\n\n    this.handleCloseConfirm = () => {\n      this.setState({\n        confirm: false\n      });\n    };\n\n    this.handleCloseConfirmRemove = () => {\n      this.setState({\n        toBeRemoved: null\n      });\n      this.setState({\n        remove: false\n      });\n    };\n  }\n\n  render() {\n    let currentOrder = this.state.shoppingCart === 0 ? React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Your order will show up here!\") : this.state.shoppingCart.map(item => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, item.item.name)), React.createElement(Grid.Column, {\n        width: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"$\" + Number(item.sp[1]).toFixed(2))), React.createElement(Grid.Column, {\n        width: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Button, {\n        circular: true,\n        icon: \"close\",\n        size: \"mini\",\n        onClick: () => this.handleRemoveItem(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }))), item.addons.map(addon => {\n        return React.createElement(Grid.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }), React.createElement(Grid.Column, {\n          width: \"5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"+ \" + addon.name)), React.createElement(Grid.Column, {\n          width: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Header, {\n          as: \"h3\",\n          color: \"grey\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"$\" + Number(addon.price).toFixed(2))), React.createElement(Grid.Column, {\n          width: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }));\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(ClientHeader, {\n      history: this.props.history,\n      shoppingCart: this.state.shoppingCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Dimmer, {\n      active: this.state.emptyPopUp,\n      onClickOutside: this.handleCloseEmpty,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Add something to your cart to fuel your grind.\")), React.createElement(Button, {\n      onClick: this.handleCloseEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Close Window\")))), React.createElement(Dimmer, {\n      active: this.state.confirm,\n      onClickOutside: this.handleCloseConfirm,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Are you sure you're all finished?\"), React.createElement(Header, {\n      as: \"h4\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Hi from the Expresso team! We would like to notify you that clicking \\u201CAll Set\\u201D below WILL charge your student account if you selected student charge. If you selected to \\u201Cpay in store\\u201D and do not pay before the end of the day, your student account will be charged, whether you picked up your food/beverage or not. Thank you for ordering with Expresso! We hope to see you again!\")), React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      positive: true,\n      onClick: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"All Set!\"))))), React.createElement(Dimmer, {\n      active: this.state.remove,\n      onClickOutside: this.handleCloseConfirmRemove,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Are you sure want to remove this from your cart?\")), React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseConfirmRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      negative: true,\n      onClick: () => this.handleConfirmRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Remove\"))))), React.createElement(Dimmer, {\n      active: this.state.loading,\n      page: true,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      stackable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"1. ORDER\"))), currentOrder), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Total\")), React.createElement(Grid.Column, {\n      width: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"$\" + this.state.totalPrice.toFixed(2)))))), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"2. PAYMENT\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      label: \"Student Charge\",\n      name: \"payment\",\n      checked: this.state.payment,\n      onChange: () => this.selectPayment(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      label: \"Pay at Store\",\n      name: \"payment\",\n      checked: !this.state.payment,\n      onChange: () => this.selectPayment(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Button, {\n      floated: \"right\",\n      onClick: this.handlePlaceOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"PLACE ORDER\")))));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = OrderPage;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(OrderPage, \"OrderPage\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js"],"names":["React","Card","Container","Header","Grid","Button","Radio","Form","Divider","Dimmer","Loader","ClientHeader","postMakeOrder","getUser","OrderPage","Component","state","user","payment","totalPrice","shoppingCart","toBeRemoved","emptyPopUp","confirm","remove","loading","componentDidMount","JSON","parse","localStorage","getItem","setState","getPrice","then","console","log","price","i","length","Number","sp","j","addons","handleFilterItem","id","prevState","filter","item","handleRemoveItem","handleConfirmRemove","handleCloseConfirmRemove","emptyCart","selectPayment","handlePlaceOrder","postOrder","items","addon","name","push","update","finalUpdate","netid","cost","status","data","availability","availabilityConfirm","handleConfirm","handleCloseConfirm","props","history","handleCloseEmpty","render","currentOrder","map","toFixed","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Container, Header, Grid, Button, Radio, Form, Divider, Dimmer, Loader } from 'semantic-ui-react';\n\nimport ClientHeader from './ClientHeader';\n\nimport { postMakeOrder } from '../Axios/axios_getter';\nimport { getUser } from '../Axios/axios_getter';\n\nclass OrderPage extends React.Component {\n\n  state = {\n    user: null,\n    payment: true,\n    totalPrice: 0,\n    shoppingCart: [],\n    toBeRemoved: null,\n    emptyPopUp: false,\n    confirm: false,\n    remove: false,\n    loading: false\n  }\n\n  componentDidMount = () => {\n    if (JSON.parse(localStorage.getItem('shoppingCart')) !== null) {\n      this.setState({ shoppingCart: JSON.parse(localStorage.getItem('shoppingCart'))});\n    }\n    this.setState({ totalPrice: this.getPrice() });\n    getUser()\n      .then(user => {\n        console.log(user); // should it be user.user or user.username?\n        this.setState({ user: user.user });\n      })\n  }\n\n  getPrice = () => {\n    let { shoppingCart } = this.state;\n    let price = 0;\n    for (let i = 0; i < shoppingCart.length; i++) {\n      price += Number(shoppingCart[i].sp[1]);\n      for (let j = 0; j < shoppingCart[i].addons.length; j++) {\n        price += Number(shoppingCart[i].addons[j].price);\n      }\n    }\n    return price;\n  }\n\n  handleFilterItem = async (id) => {\n    await this.setState({ loading: true });\n    await this.setState(prevState => {\n      let shoppingCart = prevState.shoppingCart;\n      shoppingCart = shoppingCart.filter(item => item.id !== id);\n      return { shoppingCart }\n    });\n    await this.setState({ loading: false });\n  }\n\n  handleRemoveItem = (id) => {\n    this.setState({ toBeRemoved: id });\n    this.setState({ remove: true });\n  }\n\n  handleConfirmRemove = async () => {\n    await this.handleFilterItem(this.state.toBeRemoved);\n    this.setState({ totalPrice: this.getPrice() });\n    this.handleCloseConfirmRemove();\n  }\n\n  emptyCart = () => {\n    this.setState({ shoppingCart: [] });\n  }\n\n  selectPayment = (payment) => {\n    this.setState({ payment: payment });\n  }\n\n  handlePlaceOrder = () => {\n    this.setState({ confirm: true });\n  }\n\n  postOrder = async (payment) => {\n\n    const { shoppingCart } = this.state;\n\n    await this.setState({ loading: true });\n\n    let items = [];\n    for (let i = 0; i < shoppingCart.length; i++) {\n      const item = shoppingCart[i];\n      let addons = []\n      for (let j = 0; j < item.addons.length; j++) {\n        const addon = { name: item.addons[j].name };\n        addons.push(addon);\n      }\n      const update = {\n        item: { name: item.item.name },\n        addons: addons,\n        sp: item.sp[0]\n      }\n      items.push(update);\n    }\n\n    const finalUpdate = {\n      netid: this.state.user,\n      cost: this.getPrice(),\n      payment: payment,\n      status: payment,\n      items: items\n    };\n    postMakeOrder(this.state.user, finalUpdate)\n      .then(data => {\n        if (!data.availability) {\n          this.setState({ availabilityConfirm: true });\n        }\n      });\n    await this.setState({ loading: false });\n  }\n\n  handleConfirm = async () => {\n    this.setState({ loading: true });\n    if (this.state.shoppingCart.length === 0) {\n      this.setState({ emptyPopUp: true });\n      this.handleCloseConfirm();\n      this.setState({ loading: false });\n    }\n    else {\n      await this.postOrder(this.state.payment);\n      await this.handleCloseConfirm();\n      await this.emptyCart();\n      await this.setState({ totalPrice: 0 });\n      await this.setState({ loading: false });\n      this.props.history.push('/menu');\n    }\n  }\n\n  handleCloseEmpty = () => {\n    this.setState({ emptyPopUp: false });\n  }\n\n  handleCloseConfirm = () => {\n    this.setState({ confirm: false });\n  }\n\n  handleCloseConfirmRemove = () => {\n    this.setState({ toBeRemoved: null });\n    this.setState({ remove: false });\n  }\n\n  render() {\n\n    let currentOrder = (this.state.shoppingCart === 0) ?\n    <Header as='h3'>\n      Your order will show up here!\n    </Header> :\n\n    this.state.shoppingCart.map(item => {\n      return (\n        <React.Fragment>\n          <Grid.Row>\n            <Grid.Column width='6'>\n              <Header as='h3' color='grey'>{item.item.name}</Header>\n            </Grid.Column>\n            <Grid.Column width='4'>\n              <Header as='h3' color='grey'>{\"$\" + Number(item.sp[1]).toFixed(2)}</Header>\n            </Grid.Column>\n            <Grid.Column width='6'>\n              <Button circular icon='close' size='mini' onClick={() => this.handleRemoveItem(item.id)}/>\n            </Grid.Column>\n          </Grid.Row>\n          {item.addons.map(addon => {\n            return (\n\n              <Grid.Row>\n                <Grid.Column width='1' />\n                <Grid.Column width='5'>\n                  <span>{\"+ \" + addon.name}</span>\n                </Grid.Column>\n                <Grid.Column width='4'>\n                  <Header as='h3' color='grey'>{\"$\" + Number(addon.price).toFixed(2)}</Header>\n                </Grid.Column>\n                <Grid.Column width='6' />\n              </Grid.Row>\n            )\n          })}\n          <Divider />\n        </React.Fragment>\n      )\n    });\n\n    return (\n      <React.Fragment>\n      <ClientHeader history={this.props.history} shoppingCart={this.state.shoppingCart}/>\n        {/* Pop up to confirm empty cart */}\n        <Dimmer active={this.state.emptyPopUp} onClickOutside={this.handleCloseEmpty} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>Add something to your cart to fuel your grind.</Header>\n              </Card.Content>\n              <Button onClick={this.handleCloseEmpty}>\n                Close Window\n              </Button>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Pop up to confirm order */}\n        <Dimmer active={this.state.confirm} onClickOutside={this.handleCloseConfirm} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>Are you sure you're all finished?</Header>\n                <Header as='h4' color='black'>\n                  Hi from the Expresso team! We would like to notify you that clicking “All Set” below WILL charge\n                  your student account if you selected student charge. If you selected to “pay in store” and do not\n                  pay before the end of the day, your student account will be charged, whether you picked up your\n                  food/beverage or not. Thank you for ordering with Expresso! We hope to see you again!\n                </Header>\n              </Card.Content>\n              <Button.Group>\n                <Button onClick={this.handleCloseConfirm}>Cancel</Button>\n                <Button positive onClick={this.handleConfirm}>All Set!</Button>\n              </Button.Group>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Pop up to confirm removal */}\n        <Dimmer active={this.state.remove} onClickOutside={this.handleCloseConfirmRemove} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>Are you sure want to remove this from your cart?</Header>\n              </Card.Content>\n              <Button.Group>\n                <Button onClick={this.handleCloseConfirmRemove}>Cancel</Button>\n                <Button negative onClick={() => this.handleConfirmRemove()}>Remove</Button>\n              </Button.Group>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Dimmer for loading */}\n        <Dimmer active={this.state.loading} page inverted>\n          <Loader inverted>Loading</Loader>\n        </Dimmer>\n\n        {/* Main component */}\n        <Container style={{ width: '720px' }}>\n          <Card fluid>\n            <Card.Content>\n              <Grid stackable>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header as='h2' color='black'>1. ORDER</Header>\n                  </Grid.Column>\n                </Grid.Row>\n                {currentOrder}\n              </Grid>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width='3'>\n                    <Header as='h3' color='black'>Total</Header>\n                  </Grid.Column>\n                  <Grid.Column width='3' />\n                  <Grid.Column>\n                    <Header as='h3' color='black'>{\"$\" + this.state.totalPrice.toFixed(2)}</Header>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Card.Content>\n            <Card.Content>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header as='h2' color='black'>2. PAYMENT</Header>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Form>\n                      <Form.Field>\n                        <Radio\n                          label='Student Charge'\n                          name='payment'\n                          checked={this.state.payment}\n                          onChange={() => this.selectPayment(true)}\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <Radio\n                          label='Pay at Store'\n                          name='payment'\n                          checked={!this.state.payment}\n                          onChange={() => this.selectPayment(false)}\n                        />\n                      </Form.Field>\n                    </Form>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Card.Content>\n            <div>\n              <Button floated='right' onClick={this.handlePlaceOrder}>\n                PLACE ORDER\n              </Button>\n            </div>\n          </Card>\n        </Container>\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default OrderPage;\n"]},"metadata":{},"sourceType":"module"}