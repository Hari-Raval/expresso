{"ast":null,"code":"var _jsxFileName = \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/ItemPopUp.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Card, Icon, Image, Container, Header, Grid, Button, Radio, Checkbox, Form, Item, Statistic } from 'semantic-ui-react';\nimport * as cappuccino from '../Assets/cappuccino.jpeg'; // props: name, sp, price\n\nclass ItemPopUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sizePrice: this.props.item.sp[0],\n      addons: [],\n      finalOrder: {\n        item: this.props.item,\n        addons: this.state.addons\n      },\n      totalPrice: this.props.item.sp[1]\n    };\n\n    this.getPrice = () => {\n      let price = this.state.finalOrder.item.sp[1];\n\n      for (let i = 0; i < this.state.addons.length; i++) {\n        price += this.state.addons[i].sp[1];\n      }\n\n      this.setState({\n        totalPrice: price\n      });\n    };\n\n    this.selectSize = async sizePrice => {\n      await this.setState({\n        sizePrice: sizePrice\n      });\n    };\n\n    this.addAddon = addon => {\n      this.setState(prevState => {\n        addons: prevState.addons.push(addon);\n      });\n    };\n\n    this.deleteAddon = addon => {\n      this.setState({\n        addons: this.state.addons.filter(item => item.name != addon.name)\n      });\n    };\n\n    this.handleAddon = async addon => {\n      let checked = false;\n\n      for (let i = 0; i < this.state.addons.length; i++) {\n        if (addon.name == this.state.addons[i].name) checked = true;\n      }\n\n      if (checked) {\n        await this.deleteAddon(addon);\n      } else {\n        await this.addAddon(addon);\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          item = _this$props.item,\n          add = _this$props.add;\n    return React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      textAlign: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      icon: \"close\",\n      size: \"medium\",\n      floated: \"right\",\n      onClick: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      width: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Item.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Item.Image, {\n      src: cappuccino,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Item.Content, {\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Item.Header, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Cappuccino\"), React.createElement(Item.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Imported from Italy.\"))))), React.createElement(Grid.Column, {\n      width: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })))), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      width: \"8\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"SIZE\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, item.sp.map(sizePrice => {\n      return React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        id: sizePrice[0],\n        label: sizePrice[0] + \" ($\" + sizePrice[1] + \")\",\n        name: \"size\",\n        checked: this.state.sizePrice[0] == sizePrice[0],\n        onChange: () => this.selectSize(sizePrice),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }))), React.createElement(Grid.Column, {\n      width: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      width: \"8\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"ADD-ONS\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, add.map(add => {\n      return React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        id: add.name,\n        label: add.name + \" (+ $\" + add.price + \")\",\n        name: \"add\",\n        onClick: () => this.handleAddon(add),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }))), React.createElement(Grid.Column, {\n      width: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })))), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      padded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      width: \"4\",\n      textAlign: \"left\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"$\" + this.state.totalPrice)), React.createElement(Grid.Column, {\n      width: \"4\",\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"ADD ITEM\")), React.createElement(Grid.Column, {\n      width: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))))));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = ItemPopUp;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ItemPopUp, \"ItemPopUp\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/ItemPopUp.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/ItemPopUp.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/expresso/frontend/src/Components/ItemPopUp.js"],"names":["React","Card","Icon","Image","Container","Header","Grid","Button","Radio","Checkbox","Form","Item","Statistic","cappuccino","ItemPopUp","Component","state","sizePrice","props","item","sp","addons","finalOrder","totalPrice","getPrice","price","i","length","setState","selectSize","addAddon","addon","prevState","push","deleteAddon","filter","name","handleAddon","checked","render","add","width","handleClose","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Icon, Image, Container, Header, Grid, Button, Radio, Checkbox, Form, Item, Statistic } from 'semantic-ui-react';\n\nimport * as cappuccino from '../Assets/cappuccino.jpeg';\n\n// props: name, sp, price\nclass ItemPopUp extends React.Component {\n\n  state = {\n    sizePrice: this.props.item.sp[0],\n    addons: [],\n    finalOrder: { item: this.props.item, addons: this.state.addons },\n    totalPrice: this.props.item.sp[1]\n  }\n\n  getPrice = () => {\n    let price = this.state.finalOrder.item.sp[1];\n    for (let i = 0; i < this.state.addons.length; i++) {\n      price += this.state.addons[i].sp[1];\n    }\n    this.setState({ totalPrice: price });\n  }\n\n  selectSize = async (sizePrice) => {\n    await this.setState({ sizePrice: sizePrice });\n  }\n\n  addAddon = (addon) => {\n    this.setState(prevState => {\n      addons: prevState.addons.push(addon)\n    });\n  }\n\n  deleteAddon = (addon) => {\n    this.setState({ addons: this.state.addons.filter(item => item.name != addon.name) });\n  }\n\n  handleAddon = async (addon) => {\n    let checked = false;\n    for (let i = 0; i < this.state.addons.length; i++) {\n      if (addon.name == this.state.addons[i].name) checked = true;\n    }\n    if (checked) {\n      await this.deleteAddon(addon);\n    }\n    else {\n      await this.addAddon(addon);\n    }\n  }\n\n  render() {\n\n    const { item, add } = this.props;\n\n    return (\n      <Container style={{ width: '720px' }}>\n        <Card fluid>\n          <Card.Content>\n            <Grid>\n              <Grid.Row textAlign='right'>\n                <Grid.Column>\n                  <Button circular icon='close' size='medium' floated='right' onClick={this.props.handleClose}/>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column width='3'>\n                </Grid.Column>\n                <Grid.Column width='10'>\n                  <Item.Group>\n                    <Item>\n                      <Item.Image src={cappuccino} />\n\n                      <Item.Content verticalAlign='middle'>\n                        <Item.Header as='a'>Cappuccino</Item.Header>\n                        <Item.Meta>Imported from Italy.</Item.Meta>\n                      </Item.Content>\n                    </Item>\n                  </Item.Group>\n                </Grid.Column>\n                <Grid.Column width='3'>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Card.Content>\n          <Card.Content>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width='4'>\n                </Grid.Column>\n                <Grid.Column width='8' textAlign='left'>\n                  <Header as='h3'>SIZE</Header>\n                  <Form>\n                    {item.sp.map(sizePrice => {\n                      return (\n                        <Form.Field>\n                          <Radio\n                            id={sizePrice[0]}\n                            label={sizePrice[0] + \" ($\" + sizePrice[1] + \")\"}\n                            name='size'\n                            checked={this.state.sizePrice[0] == sizePrice[0]}\n                            onChange={() => this.selectSize(sizePrice)} />\n                        </Form.Field>\n                      )\n                    })}\n                  </Form>\n                </Grid.Column>\n                <Grid.Column width='4'>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column width='4'>\n                </Grid.Column>\n                <Grid.Column width='8' textAlign='left'>\n                  <Header as='h3'>ADD-ONS</Header>\n                  <Form>\n                    {add.map(add => {\n                      return (\n                        <Form.Field>\n                          <Checkbox\n                            id={add.name}\n                            label={add.name + \" (+ $\" + add.price + \")\"}\n                            name='add'\n                            onClick={() => this.handleAddon(add)} />\n                        </Form.Field>\n                      )\n                    })}\n                  </Form>\n                </Grid.Column>\n                <Grid.Column width='4'>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Card.Content>\n          <Card.Content>\n            <Grid padded>\n              <Grid.Row>\n                <Grid.Column width='4'>\n                </Grid.Column>\n                <Grid.Column width='4' textAlign='left' verticalAlign='middle'>\n                  <Header as='h3' color='grey'>{\"$\" + this.state.totalPrice}</Header>\n                </Grid.Column>\n                <Grid.Column width='4' textAlign='center' verticalAlign='middle'>\n                  <Button>\n                    ADD ITEM\n                  </Button>\n                </Grid.Column>\n                <Grid.Column width='4'>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Card.Content>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nexport default ItemPopUp;\n"]},"metadata":{},"sourceType":"module"}