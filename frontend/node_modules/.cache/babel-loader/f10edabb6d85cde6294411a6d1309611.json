{"ast":null,"code":"var _jsxFileName = \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Card, Container, Header, Grid, Button, Radio, Form, Divider, Dimmer, Loader } from 'semantic-ui-react';\nimport ClientHeader from './ClientHeader';\nimport { postMakeOrder } from '../Axios/axios_getter';\nimport { getUser } from '../Axios/axios_getter';\n\nclass OrderPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      chargeEligible: null,\n      payment: true,\n      totalPrice: 0,\n      shoppingCart: [],\n      toBeRemoved: null,\n      emptyPopUp: false,\n      eligibilityPopUp: false,\n      confirm: false,\n      remove: false,\n      place: false,\n      loading: false\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      setTimeout(this.setInitial, 1000);\n    };\n\n    this.setInitial = () => {\n      if (JSON.parse(localStorage.getItem('shoppingCart')) !== null) {\n        this.setState({\n          shoppingCart: JSON.parse(localStorage.getItem('shoppingCart'))\n        });\n      }\n\n      this.setState({\n        totalPrice: this.getPrice()\n      });\n      getUser().then(user => {\n        this.setState({\n          user: user.user\n        });\n        this.setState({\n          chargeEligible: user.charge_eligible\n        });\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getPrice = () => {\n      let shoppingCart = this.state.shoppingCart;\n      let price = 0;\n\n      for (let i = 0; i < shoppingCart.length; i++) {\n        price += Number(shoppingCart[i].sp[1]);\n\n        for (let j = 0; j < shoppingCart[i].addons.length; j++) {\n          price += Number(shoppingCart[i].addons[j].price);\n        }\n      }\n\n      return price;\n    };\n\n    this.handleFilterItem = async id => {\n      await this.setState({\n        loading: true\n      });\n      await this.setState(prevState => {\n        let shoppingCart = prevState.shoppingCart;\n        shoppingCart = shoppingCart.filter(item => item.id !== id);\n        return {\n          shoppingCart\n        };\n      });\n      await this.setState({\n        loading: false\n      });\n    };\n\n    this.handleRemoveItem = id => {\n      this.setState({\n        toBeRemoved: id\n      });\n      this.setState({\n        remove: true\n      });\n    };\n\n    this.handleConfirmRemove = async () => {\n      await this.handleFilterItem(this.state.toBeRemoved);\n      this.setState({\n        totalPrice: this.getPrice()\n      });\n      localStorage.setItem('shoppingCart', JSON.stringify(this.state.shoppingCart));\n      this.handleCloseConfirmRemove();\n    };\n\n    this.emptyCart = async () => {\n      await this.setState({\n        shoppingCart: []\n      });\n      localStorage.setItem('shoppingCart', JSON.stringify(this.state.shoppingCart));\n    };\n\n    this.selectPayment = payment => {\n      this.setState({\n        payment: payment\n      });\n    };\n\n    this.handlePlaceOrder = () => {\n      this.setState({\n        confirm: true\n      });\n    };\n\n    this.postOrder = async payment => {\n      const shoppingCart = this.state.shoppingCart;\n      await this.setState({\n        loading: true\n      });\n      let items = [];\n\n      for (let i = 0; i < shoppingCart.length; i++) {\n        const item = shoppingCart[i];\n        let addons = [];\n\n        for (let j = 0; j < item.addons.length; j++) {\n          const addon = {\n            name: item.addons[j].name\n          };\n          addons.push(addon);\n        }\n\n        const update = {\n          item: {\n            name: item.item.name\n          },\n          addons: addons,\n          sp: item.sp[0]\n        };\n        items.push(update);\n      }\n\n      const finalUpdate = {\n        netid: this.state.user,\n        cost: this.getPrice(),\n        payment: payment,\n        status: payment,\n        items: items\n      };\n      postMakeOrder(this.state.user, finalUpdate).then(data => {\n        if (!data.availability) {\n          this.setState({\n            availabilityConfirm: true\n          });\n        }\n      });\n      await this.setState({\n        loading: false\n      });\n    };\n\n    this.handleConfirm = async () => {\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.shoppingCart.length === 0) {\n        this.setState({\n          emptyPopUp: true\n        });\n        this.handleCloseConfirm();\n        this.setState({\n          loading: false\n        });\n      } else if (!this.state.chargeEligible && this.state.payment) {\n        this.setState({\n          eligibilityPopUp: true\n        });\n        this.handleCloseConfirm();\n        this.setState({\n          loading: false\n        });\n      } else {\n        await this.postOrder(this.state.payment);\n        await this.handleCloseConfirm();\n        await this.emptyCart();\n        await this.setState({\n          totalPrice: 0\n        });\n        await this.setState({\n          place: true\n        });\n        await this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleConfirmPlace = () => {\n      this.setState({\n        place: true\n      });\n    };\n\n    this.handleCloseConfirmPlace = () => {\n      this.setState({\n        place: false\n      });\n      this.props.history.push('/menu');\n    };\n\n    this.handleCloseEmpty = () => {\n      this.setState({\n        emptyPopUp: false\n      });\n    };\n\n    this.handleCloseEligibility = () => {\n      this.setState({\n        eligibilityPopUp: false\n      });\n    };\n\n    this.handleCloseConfirm = () => {\n      this.setState({\n        confirm: false\n      });\n    };\n\n    this.handleCloseConfirmRemove = () => {\n      this.setState({\n        toBeRemoved: null\n      });\n      this.setState({\n        remove: false\n      });\n    };\n  }\n\n  render() {\n    let currentOrder = this.state.shoppingCart === 0 ? React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Your order will show up here!\") : this.state.shoppingCart.map(item => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, item.item.name)), React.createElement(Grid.Column, {\n        width: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"$\" + Number(item.sp[1]).toFixed(2))), React.createElement(Grid.Column, {\n        width: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Button, {\n        circular: true,\n        icon: \"close\",\n        size: \"mini\",\n        onClick: () => this.handleRemoveItem(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), item.addons.map(addon => {\n        return React.createElement(Grid.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }), React.createElement(Grid.Column, {\n          width: \"5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"+ \" + addon.name)), React.createElement(Grid.Column, {\n          width: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(Header, {\n          as: \"h3\",\n          color: \"grey\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"$\" + Number(addon.price).toFixed(2))), React.createElement(Grid.Column, {\n          width: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }));\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(ClientHeader, {\n      history: this.props.history,\n      shoppingCart: this.state.shoppingCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(Dimmer, {\n      active: this.state.emptyPopUp,\n      onClickOutside: this.handleCloseEmpty,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Add something to your cart to fuel your grind.\")), React.createElement(Button, {\n      onClick: this.handleCloseEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Close Window\")))), React.createElement(Dimmer, {\n      active: this.state.eligibilityPopUp,\n      onClickOutside: this.handleCloseEligibility,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Sorry, you're not eligble for the student charge option. Please select 'Pay at Store' to place your order.\")), React.createElement(Button, {\n      onClick: this.handleCloseEligibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Close Window\")))), React.createElement(Dimmer, {\n      active: this.state.confirm,\n      onClickOutside: this.handleCloseConfirm,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Are you sure you're all finished?\"), React.createElement(Header, {\n      as: \"h4\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Hi from the Expresso team! We would like to notify you that clicking \\u201CAll Set\\u201D below WILL charge your student account if you selected student charge. If you selected to \\u201Cpay in store\\u201D and do not pay before the end of the day, your student account will be charged, whether you picked up your food/beverage or not. Thank you for ordering with Expresso! We hope to see you again!\")), React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      positive: true,\n      onClick: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"All Set!\"))))), React.createElement(Dimmer, {\n      active: this.state.remove,\n      onClickOutside: this.handleCloseConfirmRemove,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Are you sure want to remove this from your cart?\")), React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleCloseConfirmRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      negative: true,\n      onClick: () => this.handleConfirmRemove(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Remove\"))))), React.createElement(Dimmer, {\n      active: this.state.place,\n      onClickOutside: this.handleCloseConfirmPlace,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Your order has been placed! It should be ready in around 5-10 minutes. You'll receive an email with the details of your order. Make your way to the Coffee Club to pick up your order!\")), React.createElement(Button, {\n      onClick: this.handleCloseConfirmPlace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Return to Menu\")))), React.createElement(Dimmer, {\n      active: this.state.loading,\n      page: true,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(Container, {\n      style: {\n        width: '720px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      stackable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"1. ORDER\"))), currentOrder), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Total\")), React.createElement(Grid.Column, {\n      width: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"$\" + this.state.totalPrice.toFixed(2)))))), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"2. PAYMENT\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      label: \"Student Charge\",\n      name: \"payment\",\n      checked: this.state.payment,\n      onChange: () => this.selectPayment(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      label: \"Pay at Store\",\n      name: \"payment\",\n      checked: !this.state.payment,\n      onChange: () => this.selectPayment(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Button, {\n      floated: \"right\",\n      onClick: this.handlePlaceOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"PLACE ORDER\")))));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = OrderPage;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(OrderPage, \"OrderPage\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/expresso/frontend/src/Components/OrderPage.js"],"names":["React","Card","Container","Header","Grid","Button","Radio","Form","Divider","Dimmer","Loader","ClientHeader","postMakeOrder","getUser","OrderPage","Component","state","user","chargeEligible","payment","totalPrice","shoppingCart","toBeRemoved","emptyPopUp","eligibilityPopUp","confirm","remove","place","loading","componentDidMount","setState","setTimeout","setInitial","JSON","parse","localStorage","getItem","getPrice","then","charge_eligible","price","i","length","Number","sp","j","addons","handleFilterItem","id","prevState","filter","item","handleRemoveItem","handleConfirmRemove","setItem","stringify","handleCloseConfirmRemove","emptyCart","selectPayment","handlePlaceOrder","postOrder","items","addon","name","push","update","finalUpdate","netid","cost","status","data","availability","availabilityConfirm","handleConfirm","handleCloseConfirm","handleConfirmPlace","handleCloseConfirmPlace","props","history","handleCloseEmpty","handleCloseEligibility","render","currentOrder","map","toFixed","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Container, Header, Grid, Button, Radio, Form, Divider, Dimmer, Loader } from 'semantic-ui-react';\n\nimport ClientHeader from './ClientHeader';\n\nimport { postMakeOrder } from '../Axios/axios_getter';\nimport { getUser } from '../Axios/axios_getter';\n\nclass OrderPage extends React.Component {\n\n  state = {\n    user: null,\n    chargeEligible: null,\n    payment: true,\n    totalPrice: 0,\n    shoppingCart: [],\n    toBeRemoved: null,\n    emptyPopUp: false,\n    eligibilityPopUp: false,\n    confirm: false,\n    remove: false,\n    place: false,\n    loading: false\n  }\n\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    setTimeout(this.setInitial, 1000);\n  }\n\n  setInitial = () => {\n    if (JSON.parse(localStorage.getItem('shoppingCart')) !== null) {\n      this.setState({ shoppingCart: JSON.parse(localStorage.getItem('shoppingCart'))});\n    }\n    this.setState({ totalPrice: this.getPrice() });\n    getUser()\n      .then(user => {\n        this.setState({ user: user.user });\n        this.setState({ chargeEligible: user.charge_eligible });\n      });\n    this.setState({ loading: false });\n  }\n\n  getPrice = () => {\n    let { shoppingCart } = this.state;\n    let price = 0;\n    for (let i = 0; i < shoppingCart.length; i++) {\n      price += Number(shoppingCart[i].sp[1]);\n      for (let j = 0; j < shoppingCart[i].addons.length; j++) {\n        price += Number(shoppingCart[i].addons[j].price);\n      }\n    }\n    return price;\n  }\n\n  handleFilterItem = async (id) => {\n    await this.setState({ loading: true });\n    await this.setState(prevState => {\n      let shoppingCart = prevState.shoppingCart;\n      shoppingCart = shoppingCart.filter(item => item.id !== id);\n      return { shoppingCart }\n    });\n    await this.setState({ loading: false });\n  }\n\n  handleRemoveItem = (id) => {\n    this.setState({ toBeRemoved: id });\n    this.setState({ remove: true });\n  }\n\n  handleConfirmRemove = async () => {\n    await this.handleFilterItem(this.state.toBeRemoved);\n    this.setState({ totalPrice: this.getPrice() });\n    localStorage.setItem('shoppingCart', JSON.stringify(this.state.shoppingCart));\n    this.handleCloseConfirmRemove();\n  }\n\n  emptyCart = async () => {\n    await this.setState({ shoppingCart: [] });\n    localStorage.setItem('shoppingCart', JSON.stringify(this.state.shoppingCart));\n  }\n\n  selectPayment = (payment) => {\n    this.setState({ payment: payment });\n  }\n\n  handlePlaceOrder = () => {\n    this.setState({ confirm: true });\n  }\n\n  postOrder = async (payment) => {\n\n    const { shoppingCart } = this.state;\n\n    await this.setState({ loading: true });\n\n    let items = [];\n    for (let i = 0; i < shoppingCart.length; i++) {\n      const item = shoppingCart[i];\n      let addons = []\n      for (let j = 0; j < item.addons.length; j++) {\n        const addon = { name: item.addons[j].name };\n        addons.push(addon);\n      }\n      const update = {\n        item: { name: item.item.name },\n        addons: addons,\n        sp: item.sp[0]\n      }\n      items.push(update);\n    }\n\n    const finalUpdate = {\n      netid: this.state.user,\n      cost: this.getPrice(),\n      payment: payment,\n      status: payment,\n      items: items\n    };\n    postMakeOrder(this.state.user, finalUpdate)\n      .then(data => {\n        if (!data.availability) {\n          this.setState({ availabilityConfirm: true });\n        }\n      });\n    await this.setState({ loading: false });\n  }\n\n  handleConfirm = async () => {\n    this.setState({ loading: true });\n    if (this.state.shoppingCart.length === 0) {\n      this.setState({ emptyPopUp: true });\n      this.handleCloseConfirm();\n      this.setState({ loading: false });\n    }\n    else if (!this.state.chargeEligible && this.state.payment) {\n      this.setState({ eligibilityPopUp: true });\n      this.handleCloseConfirm();\n      this.setState({ loading: false });\n    }\n    else {\n      await this.postOrder(this.state.payment);\n      await this.handleCloseConfirm();\n      await this.emptyCart();\n      await this.setState({ totalPrice: 0 });\n      await this.setState({ place: true })\n      await this.setState({ loading: false });\n    }\n  }\n\n  handleConfirmPlace = () => {\n    this.setState({ place: true });\n  }\n\n  handleCloseConfirmPlace = () => {\n    this.setState({ place: false });\n    this.props.history.push('/menu');\n  }\n\n  handleCloseEmpty = () => {\n    this.setState({ emptyPopUp: false });\n  }\n\n  handleCloseEligibility = () => {\n    this.setState({ eligibilityPopUp: false });\n  }\n\n  handleCloseConfirm = () => {\n    this.setState({ confirm: false });\n  }\n\n  handleCloseConfirmRemove = () => {\n    this.setState({ toBeRemoved: null });\n    this.setState({ remove: false });\n  }\n\n  render() {\n\n    let currentOrder = (this.state.shoppingCart === 0) ?\n    <Header as='h3'>\n      Your order will show up here!\n    </Header> :\n\n    this.state.shoppingCart.map(item => {\n      return (\n        <React.Fragment>\n          <Grid.Row>\n            <Grid.Column width='6'>\n              <Header as='h3' color='grey'>{item.item.name}</Header>\n            </Grid.Column>\n            <Grid.Column width='4'>\n              <Header as='h3' color='grey'>{\"$\" + Number(item.sp[1]).toFixed(2)}</Header>\n            </Grid.Column>\n            <Grid.Column width='6'>\n              <Button circular icon='close' size='mini' onClick={() => this.handleRemoveItem(item.id)}/>\n            </Grid.Column>\n          </Grid.Row>\n          {item.addons.map(addon => {\n            return (\n\n              <Grid.Row>\n                <Grid.Column width='1' />\n                <Grid.Column width='5'>\n                  <span>{\"+ \" + addon.name}</span>\n                </Grid.Column>\n                <Grid.Column width='4'>\n                  <Header as='h3' color='grey'>{\"$\" + Number(addon.price).toFixed(2)}</Header>\n                </Grid.Column>\n                <Grid.Column width='6' />\n              </Grid.Row>\n            )\n          })}\n          <Divider />\n        </React.Fragment>\n      )\n    });\n\n    return (\n      <React.Fragment>\n        <ClientHeader history={this.props.history} shoppingCart={this.state.shoppingCart} />\n        {/* Pop up to confirm empty cart */}\n        <Dimmer active={this.state.emptyPopUp} onClickOutside={this.handleCloseEmpty} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>Add something to your cart to fuel your grind.</Header>\n              </Card.Content>\n              <Button onClick={this.handleCloseEmpty}>\n                Close Window\n              </Button>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Pop up to confirm charge ineligibility*/}\n        <Dimmer active={this.state.eligibilityPopUp} onClickOutside={this.handleCloseEligibility} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>Sorry, you're not eligble for the student charge option. Please select 'Pay at Store' to place your order.</Header>\n              </Card.Content>\n              <Button onClick={this.handleCloseEligibility}>\n                Close Window\n              </Button>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Pop up to confirm order */}\n        <Dimmer active={this.state.confirm} onClickOutside={this.handleCloseConfirm} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>Are you sure you're all finished?</Header>\n                <Header as='h4' color='black'>\n                  Hi from the Expresso team! We would like to notify you that clicking “All Set” below WILL charge\n                  your student account if you selected student charge. If you selected to “pay in store” and do not\n                  pay before the end of the day, your student account will be charged, whether you picked up your\n                  food/beverage or not. Thank you for ordering with Expresso! We hope to see you again!\n                </Header>\n              </Card.Content>\n              <Button.Group>\n                <Button onClick={this.handleCloseConfirm}>Cancel</Button>\n                <Button positive onClick={this.handleConfirm}>All Set!</Button>\n              </Button.Group>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Pop up to confirm removal */}\n        <Dimmer active={this.state.remove} onClickOutside={this.handleCloseConfirmRemove} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>Are you sure want to remove this from your cart?</Header>\n              </Card.Content>\n              <Button.Group>\n                <Button onClick={this.handleCloseConfirmRemove}>Cancel</Button>\n                <Button negative onClick={() => this.handleConfirmRemove()}>Remove</Button>\n              </Button.Group>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Pop up to confirm order has been placed */}\n        <Dimmer active={this.state.place} onClickOutside={this.handleCloseConfirmPlace} page>\n          <Container style={{ width: '720px' }}>\n            <Card fluid>\n              <Card.Content>\n                <Header as='h3' color='grey'>\n                  Your order has been placed! It should be ready in around 5-10 minutes.\n                  You'll receive an email with the details of your order. Make your way\n                  to the Coffee Club to pick up your order!\n                </Header>\n              </Card.Content>\n              <Button onClick={this.handleCloseConfirmPlace}>Return to Menu</Button>\n            </Card>\n          </Container>\n        </Dimmer>\n        {/* Dimmer for loading */}\n        <Dimmer active={this.state.loading} page inverted>\n          <Loader inverted>Loading</Loader>\n        </Dimmer>\n\n        {/* Main component */}\n        <Container style={{ width: '720px' }}>\n          <Card fluid>\n            <Card.Content>\n              <Grid stackable>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header as='h2' color='black'>1. ORDER</Header>\n                  </Grid.Column>\n                </Grid.Row>\n                {currentOrder}\n              </Grid>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width='3'>\n                    <Header as='h3' color='black'>Total</Header>\n                  </Grid.Column>\n                  <Grid.Column width='3' />\n                  <Grid.Column>\n                    <Header as='h3' color='black'>{\"$\" + this.state.totalPrice.toFixed(2)}</Header>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Card.Content>\n            <Card.Content>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Header as='h2' color='black'>2. PAYMENT</Header>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Form>\n                      <Form.Field>\n                        <Radio\n                          label='Student Charge'\n                          name='payment'\n                          checked={this.state.payment}\n                          onChange={() => this.selectPayment(true)}\n                        />\n                      </Form.Field>\n                      <Form.Field>\n                        <Radio\n                          label='Pay at Store'\n                          name='payment'\n                          checked={!this.state.payment}\n                          onChange={() => this.selectPayment(false)}\n                        />\n                      </Form.Field>\n                    </Form>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Card.Content>\n            <div>\n              <Button floated='right' onClick={this.handlePlaceOrder}>\n                PLACE ORDER\n              </Button>\n            </div>\n          </Card>\n        </Container>\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default OrderPage;\n"]},"metadata":{},"sourceType":"module"}