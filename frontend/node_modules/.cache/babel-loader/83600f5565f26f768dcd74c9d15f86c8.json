{"ast":null,"code":"var _jsxFileName = \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/BaristaOrders.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Menu, Icon, Image, Container, Header, Grid, Responsive, Dropdown, Button, Divider } from 'semantic-ui-react';\nimport { getBaristaOrders, postInProgress, postComplete } from '../Axios/axios_getter';\n\nclass BaristaOrders extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allOrders: [],\n      loading: false\n    };\n\n    this.componentDidMount = async () => {\n      this.setState({\n        loading: true\n      });\n      await this.getPendingOrders();\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getPendingOrders = () => {\n      getBaristaOrders().then(allOrders => {\n        this.setState({\n          allOrders: allOrders\n        });\n        console.log(this.state.allOrders);\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          allOrders: []\n        });\n      });\n    };\n\n    this.handleInProgress = id => {\n      this.setState({\n        loading: true\n      });\n      postInProgress(id);\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleComplete = id => {\n      this.setState({\n        loading: true\n      });\n      postComplete(id);\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  render() {\n    const allOrders = this.state.allOrders;\n    let pendingOrders = allOrders.length == 0 ? React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \":)\") : this.state.allOrders.map(order => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        verticalAlign: \"middle\",\n        width: \"2\",\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, order.orderid)), React.createElement(Grid.Column, {\n        width: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          margin: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, order.item), React.createElement(\"h3\", {\n        style: {\n          margin: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, order.netid), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, order.time)), React.createElement(Grid.Column, {\n        width: \"4\",\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Button, {\n        circular: true,\n        onClick: this.handleInProgress,\n        style: {\n          background: '#F98F69'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"IN PROGRESS\"), React.createElement(Button, {\n        circular: true,\n        onClick: this.handleComplete,\n        style: {\n          background: '#B7E4A9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"COMPLETE\")), React.createElement(Grid.Column, {\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          margin: '0',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, '$' + order.cost.toFixed(2)), React.createElement(Button, {\n        circular: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"PAID\"))));\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, pendingOrders));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = BaristaOrders;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(BaristaOrders, \"BaristaOrders\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/BaristaOrders.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/spoiledhua/Desktop/expresso/frontend/src/Components/BaristaOrders.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/expresso/frontend/src/Components/BaristaOrders.js"],"names":["React","Menu","Icon","Image","Container","Header","Grid","Responsive","Dropdown","Button","Divider","getBaristaOrders","postInProgress","postComplete","BaristaOrders","Component","state","allOrders","loading","componentDidMount","setState","getPendingOrders","then","console","log","catch","error","handleInProgress","id","handleComplete","render","pendingOrders","length","map","order","textAlign","orderid","margin","item","netid","time","background","cost","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, Icon, Image, Container, Header, Grid, Responsive, Dropdown, Button, Divider} from 'semantic-ui-react';\n\nimport { getBaristaOrders, postInProgress, postComplete } from '../Axios/axios_getter';\n\nclass BaristaOrders extends React.Component {\n\n  state = {\n    allOrders: [],\n    loading: false\n  }\n\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n\n    await this.getPendingOrders()\n\n    this.setState({ loading: false });\n  }\n\n  getPendingOrders = () => {\n    getBaristaOrders()\n      .then(allOrders => {\n        this.setState({ allOrders: allOrders });\n        console.log(this.state.allOrders);\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ allOrders: [] });\n      });\n  }\n\n  handleInProgress = (id) => {\n    this.setState({ loading: true });\n    postInProgress(id);\n    this.setState({ loading: false });\n  }\n\n  handleComplete = (id) => {\n    this.setState({ loading: true });\n    postComplete(id);\n    this.setState({ loading: false });\n  }\n\n  render() {\n\n    const { allOrders } = this.state;\n\n    let pendingOrders = (allOrders.length == 0) ?\n    <Header as='h3'>\n      :)\n    </Header> :\n\n    this.state.allOrders.map(order => {\n      return (\n        <React.Fragment>\n          <Grid.Row>\n            <Grid.Column verticalAlign='middle' width='2' style={{textAlign:'center'}}>\n              <h1>{order.orderid}</h1>\n            </Grid.Column>\n            <Grid.Column width='6'>\n              <h2 style={{margin: '0'}}>{order.item}</h2>\n              <h3 style={{margin: '0'}}>{order.netid}</h3>\n              <p>{order.time}</p>\n            </Grid.Column>\n            <Grid.Column width='4' verticalAlign='middle'>\n              <Button circular onClick={this.handleInProgress} style={{background: '#F98F69'}}>IN PROGRESS</Button>\n              <Button circular onClick={this.handleComplete} style={{background: '#B7E4A9'}}>COMPLETE</Button>\n            </Grid.Column>\n            <Grid.Column verticalAlign='middle' >\n              <h3 style={{margin:'0', textAlign:'center'}}>{'$' + order.cost.toFixed(2)}</h3>\n              <Button circular color='red'>PAID</Button>\n            </Grid.Column>\n          </Grid.Row>\n        </React.Fragment>\n      )\n    });\n\n    return (\n      <React.Fragment>\n        <Grid divided='vertically'>\n          {/*  new row for every order*/}\n          {pendingOrders}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BaristaOrders;\n"]},"metadata":{},"sourceType":"module"}