{"ast":null,"code":"var _jsxFileName = \"/Users/dorazhao/Documents/Princeton University (2017-2021)/2019-2020/Fall Semester/COS 333/expresso/frontend/src/Components/BaristaOrders.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Menu, Icon, Image, Container, Header, Grid, Responsive, Dropdown, Button, Divider, Dimmer, Loader, Card } from 'semantic-ui-react';\nimport { getBaristaOrders, postInProgress, postComplete, postPaid } from '../Axios/axios_getter'; // idk how to make these render for a couple of seconds so they have an 'x' out button :/\n\nconst Progress = ({\n  handleProgressClose\n}) => {\n  return React.createElement(Card, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: \"14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    width: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Button, {\n    circular: true,\n    icon: \"close\",\n    size: \"medium\",\n    floated: \"right\",\n    onClick: handleProgressClose,\n    basic: true,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })))), React.createElement(\"h2\", {\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Order in progress \\u2705\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nconst Complete = ({\n  handleCompleteClose\n}) => {\n  return React.createElement(Card, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: \"14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    width: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    circular: true,\n    icon: \"close\",\n    size: \"medium\",\n    floated: \"right\",\n    onClick: handleCompleteClose,\n    basic: true,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })))), React.createElement(\"h2\", {\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Order complete \\u2705\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};\n\nconst Paid = ({\n  handlePaidClose\n}) => {\n  return React.createElement(Card, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: \"14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Grid.Column, {\n    width: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    circular: true,\n    icon: \"close\",\n    size: \"medium\",\n    floated: \"right\",\n    onClick: handlePaidClose,\n    basic: true,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))), React.createElement(\"h2\", {\n    style: {\n      color: 'black'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Order paid \\u2705\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nclass BaristaOrders extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._ProgressTimeoutID = null;\n    this._CompleteTimeoutID = null;\n    this._PaidTimeoutID = null;\n    this.state = {\n      allOrders: [],\n      loading: false,\n      progressActive: false,\n      completeActive: false,\n      paidActive: false\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      this.getPendingOrders();\n      this.setState({\n        loading: false\n      });\n      let intervalFunction = setInterval(this.getPendingOrders, 10000);\n    };\n\n    this.getPendingOrders = async () => {\n      await getBaristaOrders().then(allOrders => {\n        this.setState({\n          allOrders: allOrders\n        }); // console.log(this.state.allOrders);\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          allOrders: []\n        });\n      });\n    };\n\n    this.handleInProgress = id => {\n      this.setState({\n        loading: true\n      });\n      postInProgress(id);\n      this.setState({\n        progressActive: true\n      });\n      this._ProgressTimeoutID = setTimeout(() => {\n        this.setState({\n          progressActive: false\n        });\n      }, 1000);\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleComplete = id => {\n      this.setState({\n        loading: true\n      });\n      postComplete(id);\n      this.setState({\n        completeActive: true\n      });\n      this._CompleteTimeoutID = setTimeout(() => {\n        this.setState({\n          completeActive: false\n        });\n      }, 1000);\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handlePaid = id => {\n      this.setState({\n        loading: true\n      });\n      postPaid(id);\n      this._PaidTimeoutID = setTimeout(() => {\n        this.setState({\n          paidActive: false\n        });\n      }, 1000);\n      this.setState({\n        paidActive: true\n      });\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleProgressClose = () => {\n      this.setState({\n        progressActive: false\n      });\n    };\n\n    this.handleCompleteClose = () => {\n      this.setState({\n        completeActive: false\n      });\n    };\n\n    this.handlePaidClose = () => {\n      this.setState({\n        paidActive: false\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._ProgressTimeoutID);\n    clearTimeout(this._CompleteTimeoutID);\n    clearTimeout(this._PaidTimeoutID);\n  }\n\n  render() {\n    const allOrders = this.state.allOrders;\n    let pendingOrders = allOrders.length === 0 ? React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"No pending orders\") : this.state.allOrders.map(order => {\n      if (order.payment) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(Dimmer, {\n          active: this.state.progressActive,\n          onClickOutside: this.handleProgressClose,\n          page: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Progress, {\n          handleProgressClose: this.handleProgressClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }))), React.createElement(Dimmer, {\n          active: this.state.completeActive,\n          onClickOutside: this.handleCompleteClose,\n          page: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Complete, {\n          handleCompleteClose: this.handleCompleteClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }))), React.createElement(Dimmer, {\n          active: this.state.paidActive,\n          onClickOutside: this.handlePaidClose,\n          page: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(Paid, {\n          handlePaidClose: this.handlePaidClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }))), React.createElement(Grid.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          verticalAlign: \"middle\",\n          width: \"2\",\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, order.orderid)), React.createElement(Grid.Column, {\n          width: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, order.item.map(subitem => {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            style: {\n              margin: '0'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, subitem), React.createElement(Divider, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }));\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, order.netid), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, order.time)), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(Button, {\n          circular: true,\n          disable: order.progress === 1 || order.progress === 2,\n          onClick: () => this.handleInProgress(order.orderid),\n          style: {\n            background: '#F98F69'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"IN PROGRESS\")), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(Button, {\n          circular: true,\n          onClick: () => this.handleComplete(order.orderid),\n          style: {\n            background: '#B7E4A9'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"COMPLETE\")), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, \"Student-Charge\", React.createElement(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, '$' + order.cost.toFixed(2))), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"PAID\"))));\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(Grid.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          verticalAlign: \"middle\",\n          width: \"2\",\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, order.orderid)), React.createElement(Grid.Column, {\n          width: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, order.item.map(subitem => {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            style: {\n              margin: '0'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, subitem), React.createElement(Divider, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }));\n        }), React.createElement(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, order.netid), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, order.time)), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(Button, {\n          circular: true,\n          disabled: order.status === 1,\n          onClick: () => this.handleInProgress(order.orderid),\n          style: {\n            background: '#F98F69'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, \"IN PROGRESS\")), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(Button, {\n          circular: true,\n          onClick: () => this.handleComplete(order.orderid),\n          style: {\n            background: '#B7E4A9'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"COMPLETE\")), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Pay In-Store\", React.createElement(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, '$' + order.cost.toFixed(2))), React.createElement(Grid.Column, {\n          width: \"2\",\n          verticalAlign: \"middle\",\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(Button, {\n          circular: true,\n          onClick: () => this.handlePaid(order.orderid),\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, \"PAID\"))));\n      }\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      active: this.state.loading,\n      inverted: true,\n      page: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(Grid, {\n      stackable: true,\n      divided: \"vertically\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, pendingOrders));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = BaristaOrders;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Progress, \"Progress\", \"/Users/dorazhao/Documents/Princeton University (2017-2021)/2019-2020/Fall Semester/COS 333/expresso/frontend/src/Components/BaristaOrders.js\");\n  reactHotLoader.register(Complete, \"Complete\", \"/Users/dorazhao/Documents/Princeton University (2017-2021)/2019-2020/Fall Semester/COS 333/expresso/frontend/src/Components/BaristaOrders.js\");\n  reactHotLoader.register(Paid, \"Paid\", \"/Users/dorazhao/Documents/Princeton University (2017-2021)/2019-2020/Fall Semester/COS 333/expresso/frontend/src/Components/BaristaOrders.js\");\n  reactHotLoader.register(BaristaOrders, \"BaristaOrders\", \"/Users/dorazhao/Documents/Princeton University (2017-2021)/2019-2020/Fall Semester/COS 333/expresso/frontend/src/Components/BaristaOrders.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/dorazhao/Documents/Princeton University (2017-2021)/2019-2020/Fall Semester/COS 333/expresso/frontend/src/Components/BaristaOrders.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/dorazhao/Documents/Princeton University (2017-2021)/2019-2020/Fall Semester/COS 333/expresso/frontend/src/Components/BaristaOrders.js"],"names":["React","Menu","Icon","Image","Container","Header","Grid","Responsive","Dropdown","Button","Divider","Dimmer","Loader","Card","getBaristaOrders","postInProgress","postComplete","postPaid","Progress","handleProgressClose","color","Complete","handleCompleteClose","Paid","handlePaidClose","BaristaOrders","Component","_ProgressTimeoutID","_CompleteTimeoutID","_PaidTimeoutID","state","allOrders","loading","progressActive","completeActive","paidActive","componentDidMount","setState","getPendingOrders","intervalFunction","setInterval","then","catch","error","console","log","handleInProgress","id","setTimeout","handleComplete","handlePaid","componentWillUnmount","clearTimeout","render","pendingOrders","length","map","order","payment","textAlign","orderid","item","subitem","margin","netid","time","progress","background","cost","toFixed","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, Icon, Image, Container, Header, Grid, Responsive, Dropdown, Button, Divider, Dimmer, Loader, Card} from 'semantic-ui-react';\n\nimport { getBaristaOrders, postInProgress, postComplete, postPaid } from '../Axios/axios_getter';\n\n// idk how to make these render for a couple of seconds so they have an 'x' out button :/\nconst Progress = ({handleProgressClose}) => {\n  return (\n    <Card centered>\n      <Card.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width='14'/>\n            <Grid.Column width='2'>\n              <Button circular icon='close' size='medium' floated='right' onClick={handleProgressClose} basic color='black'/>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <h2 style={{color:'black'}}>Order in progress ✅</h2>\n        <br/><br/><br/>\n      </Card.Content>\n    </Card>\n  )\n}\n\nconst Complete = ({handleCompleteClose}) => {\n  return (\n    <Card centered>\n      <Card.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width='14'/>\n            <Grid.Column width='2'>\n              <Button circular icon='close' size='medium' floated='right' onClick={handleCompleteClose} basic color='black'/>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <h2 style={{color:'black'}}>Order complete ✅</h2>\n        <br/><br/><br/>\n      </Card.Content>\n    </Card>\n  )\n}\n\nconst Paid = ({handlePaidClose}) => {\n  return (\n    <Card centered>\n      <Card.Content>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width='14'/>\n            <Grid.Column width='2'>\n              <Button circular icon='close' size='medium' floated='right' onClick={handlePaidClose} basic color='black'/>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <h2 style={{color:'black'}}>Order paid ✅</h2>\n        <br/><br/><br/>\n      </Card.Content>\n    </Card>\n  )\n}\n\nclass BaristaOrders extends React.Component {\n  _ProgressTimeoutID = null;\n  _CompleteTimeoutID = null;\n  _PaidTimeoutID = null;\n\n  state = {\n    allOrders: [],\n    loading: false,\n    progressActive: false,\n    completeActive: false,\n    paidActive : false\n  }\n\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    this.getPendingOrders();\n    this.setState({ loading: false });\n    let intervalFunction = setInterval(this.getPendingOrders, 10000);\n  }\n\n  getPendingOrders = async () => {\n    await getBaristaOrders()\n      .then(allOrders => {\n        this.setState({ allOrders: allOrders });\n        // console.log(this.state.allOrders);\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ allOrders: [] });\n      });\n  }\n\n  handleInProgress = (id) => {\n    this.setState({ loading: true });\n    postInProgress(id);\n    this.setState({progressActive: true})\n    this._ProgressTimeoutID = setTimeout(() => {\n      this.setState({progressActive: false})\n    }, 1000);\n    this.setState({ loading: false });\n  }\n\n  handleComplete = (id) => {\n    this.setState({ loading: true });\n    postComplete(id);\n    this.setState({completeActive: true})\n    this._CompleteTimeoutID = setTimeout(() => {\n      this.setState({completeActive: false})\n    }, 1000);\n    this.setState({ loading: false });\n  }\n\n  handlePaid = (id) => {\n    this.setState({ loading: true });\n    postPaid(id);\n    this._PaidTimeoutID = setTimeout(() => {\n      this.setState({paidActive: false})\n    }, 1000);\n    this.setState({paidActive: true})\n    this.setState({ loading: false });\n  }\n\n  handleProgressClose = () => {\n    this.setState({ progressActive: false });\n  }\n\n  handleCompleteClose = () => {\n    this.setState({ completeActive: false });\n  }\n\n  handlePaidClose = () => {\n    this.setState({ paidActive: false });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._ProgressTimeoutID);\n    clearTimeout(this._CompleteTimeoutID);\n    clearTimeout(this._PaidTimeoutID);\n  }\n\n  render() {\n\n    const { allOrders } = this.state;\n\n    let pendingOrders = (allOrders.length === 0) ?\n    <Header as='h3'>\n      No pending orders\n    </Header> :\n\n    this.state.allOrders.map(order => {\n      if (order.payment) {\n      return (\n        <React.Fragment>\n          <Dimmer active={this.state.progressActive} onClickOutside={this.handleProgressClose} page>\n            <Container>\n              <Progress handleProgressClose={this.handleProgressClose}/>\n            </Container>\n          </Dimmer>\n          <Dimmer active={this.state.completeActive} onClickOutside={this.handleCompleteClose} page>\n            <Container>\n              <Complete handleCompleteClose={this.handleCompleteClose}/>\n            </Container>\n          </Dimmer>\n          <Dimmer active={this.state.paidActive} onClickOutside={this.handlePaidClose} page>\n            <Container>\n              <Paid handlePaidClose={this.handlePaidClose}/>\n            </Container>\n          </Dimmer>\n          <Grid.Row>\n            <Grid.Column verticalAlign='middle' width='2' style={{textAlign:'center'}}>\n              <h1>{order.orderid}</h1>\n            </Grid.Column>\n            <Grid.Column width='6'>\n              {order.item.map(subitem => {\n                return (\n                  <React.Fragment>\n                    <h2 style={{margin: '0'}}>{subitem}</h2>\n                    <Divider />\n                  </React.Fragment>\n                )\n              })}\n              <h3 style={{margin: '0'}}>{order.netid}</h3>\n              <p>{order.time}</p>\n            </Grid.Column>\n            <Grid.Column width='2' verticalAlign='middle'>\n              {/* disable in progress button after order is in progress*/}\n              <Button circular disable={order.progress === 1 || order.progress === 2} onClick={() => this.handleInProgress(order.orderid)} style={{background: '#F98F69'}}>IN PROGRESS</Button>\n            </Grid.Column>\n            <Grid.Column width='2' verticalAlign='middle'>\n              <Button circular onClick={() => this.handleComplete(order.orderid)} style={{background: '#B7E4A9'}}>COMPLETE</Button>\n            </Grid.Column>\n            <Grid.Column width='2'verticalAlign='middle' textAlign='center'>\n              Student-Charge\n              <h3 style={{margin:'0'}}>{'$' + order.cost.toFixed(2)}</h3>\n            </Grid.Column>\n            <Grid.Column width='2' verticalAlign='middle' textAlign='center'>\n              <h2>PAID</h2>\n            </Grid.Column>\n          </Grid.Row>\n        </React.Fragment>\n\n      ) }\n      else {\n        return (\n          <React.Fragment>\n          <Grid.Row>\n            <Grid.Column verticalAlign='middle' width='2' style={{textAlign:'center'}}>\n              <h1>{order.orderid}</h1>\n            </Grid.Column>\n            <Grid.Column width='6'>\n              {order.item.map(subitem => {\n                return (\n                  <React.Fragment>\n                    <h2 style={{margin: '0'}}>{subitem}</h2>\n                    <Divider />\n                  </React.Fragment>\n                )\n              })}\n              <h3 style={{margin: '0'}}>{order.netid}</h3>\n              <p>{order.time}</p>\n            </Grid.Column>\n            <Grid.Column width='2' verticalAlign='middle'>\n              {/* disable in progress button after order is in progress*/}\n              <Button circular disabled={order.status === 1} onClick={() => this.handleInProgress(order.orderid)} style={{background: '#F98F69'}}>IN PROGRESS</Button>\n            </Grid.Column>\n            <Grid.Column width='2' verticalAlign='middle'>\n              <Button circular onClick={() => this.handleComplete(order.orderid)} style={{background: '#B7E4A9'}}>COMPLETE</Button>\n            </Grid.Column>\n            <Grid.Column width='2'verticalAlign='middle' textAlign='center'>\n              Pay In-Store\n              <h3 style={{margin:'0'}}>{'$' + order.cost.toFixed(2)}</h3>\n            </Grid.Column>\n            <Grid.Column width='2' verticalAlign='middle' textAlign='center'>\n              <Button circular onClick={() => this.handlePaid(order.orderid)} color='red'>PAID</Button>\n            </Grid.Column>\n          </Grid.Row>\n        </React.Fragment>\n        )\n      }\n    });\n\n    return (\n      <React.Fragment>\n        <Dimmer active={this.state.loading} inverted page>\n          <Loader inverted>Loading</Loader>\n        </Dimmer>\n        <Grid stackable divided='vertically'>\n          {/*  new row for every order*/}\n          {pendingOrders}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BaristaOrders;\n"]},"metadata":{},"sourceType":"module"}