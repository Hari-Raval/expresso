{"ast":null,"code":"import _classCallCheck from\"/Users/spoiledhua/Desktop/expresso/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/spoiledhua/Desktop/expresso/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/spoiledhua/Desktop/expresso/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/spoiledhua/Desktop/expresso/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/spoiledhua/Desktop/expresso/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Header,Grid,Button,Divider,Dimmer,Loader}from'semantic-ui-react';import BaristaHeader from'./BaristaHeader';import*as dingURL from'../Assets/ding.mp3';import{getBaristaOrders,postInProgress,postComplete,postPaid}from'../Axios/axios_getter';var ding=new Audio(dingURL);var BaristaOrders=/*#__PURE__*/function(_React$Component){_inherits(BaristaOrders,_React$Component);function BaristaOrders(){var _getPrototypeOf2;var _this;_classCallCheck(this,BaristaOrders);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(BaristaOrders)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={allOrders:[],loading:false,intervalId:null};_this.componentDidMount=function(){_this.setState({loading:true});_this.getPendingOrdersInterval(true);var intervalId=setInterval(_this.getPendingOrdersInterval,10000);_this.setState({intervalId:intervalId});};_this.componentWillUnmount=function(){clearInterval(_this.state.intervalId);};_this.getPendingOrdersInterval=function(isFirstLoad){getBaristaOrders().then(function(allOrders){// Check if there are any new orders\nvar hasNewOrders=false;if(!isFirstLoad){var oldOrders=new Set(_this.state.allOrders.map(function(order){return order.orderid;}));for(var i=0;i<allOrders.length;i++){if(!oldOrders.has(allOrders[i].orderid)){hasNewOrders=true;break;}}}// If there's a new order, play a ding\nif(hasNewOrders){ding.play();}_this.setState({allOrders:allOrders});}).catch(function(error){console.log(error);});_this.setState({loading:false});};_this.getPendingOrders=function(isFirstLoad){getBaristaOrders().then(function(allOrders){// Check if there are any new orders\nvar hasNewOrders=false;if(!isFirstLoad){var oldOrders=new Set(_this.state.allOrders.map(function(order){return order.orderid;}));for(var i=0;i<allOrders.length;i++){if(!oldOrders.has(allOrders[i].orderid)){hasNewOrders=true;break;}}}// If there's a new order, play a ding\nif(hasNewOrders){ding.play();}_this.setState({allOrders:allOrders});}).catch(function(error){console.log(error);});_this.setState({loading:false});};_this.handleInProgress=function(id){_this.setState({loading:true});postInProgress(id);_this.getPendingOrders();_this.setState({loading:false});};_this.handleComplete=function(id){_this.setState({loading:true});postComplete(id);_this.getPendingOrders();_this.setState({loading:false});};_this.handlePaid=function(id){_this.setState({loading:true});postPaid(id);_this.getPendingOrders();_this.setState({loading:false});};return _this;}_createClass(BaristaOrders,[{key:\"render\",value:function render(){var _this2=this;var allOrders=this.state.allOrders;var pendingOrders=allOrders.length===0?React.createElement(Header,{as:\"h3\"},\"No Orders!\"):this.state.allOrders.map(function(order){return React.createElement(React.Fragment,null,React.createElement(Grid.Row,null,React.createElement(Grid.Column,{verticalAlign:\"middle\",width:\"2\",style:{textAlign:'center'}},React.createElement(\"h1\",null,order.orderid)),React.createElement(Grid.Column,{width:\"6\"},order.item.map(function(subitem){return React.createElement(React.Fragment,null,React.createElement(\"h2\",{style:{margin:'0'}},subitem),React.createElement(Divider,null));}),React.createElement(\"h3\",{style:{margin:'0'}},order.netid),React.createElement(\"p\",null,order.time)),React.createElement(Grid.Column,{width:\"3\",verticalAlign:\"middle\"},React.createElement(Button,{circular:true,disabled:order.order_status,onClick:function onClick(){return _this2.handleInProgress(order.orderid);},style:{fontFamily:'Avenir',background:'#EBD36D'}},\"IN PROGRESS\")),React.createElement(Grid.Column,{width:\"3\",verticalAlign:\"middle\"},React.createElement(Button,{circular:true,disabled:!order.status,onClick:function onClick(){return _this2.handleComplete(order.orderid);},style:{fontFamily:'Avenir',background:'#85A290'}},\"COMPLETE\")),React.createElement(Grid.Column,{width:\"2\",verticalAlign:\"middle\"},order.status?React.createElement(Header,{as:\"h3\"},\"PAID\"):React.createElement(Button,{circular:true,onClick:function onClick(){return _this2.handlePaid(order.orderid);},style:{color:'white',fontFamily:'Avenir',background:'#C96148'}},\"PENDING\"))));});return React.createElement(React.Fragment,null,React.createElement(BaristaHeader,{history:this.props.history}),React.createElement(Dimmer,{active:this.state.loading,inverted:true,page:true},React.createElement(Loader,{inverted:true},\"Loading\")),React.createElement(Grid,{stackable:true,divided:\"vertically\"},pendingOrders));}}]);return BaristaOrders;}(React.Component);export default BaristaOrders;","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/expresso/frontend/src/Components/BaristaOrders.js"],"names":["React","Header","Grid","Button","Divider","Dimmer","Loader","BaristaHeader","dingURL","getBaristaOrders","postInProgress","postComplete","postPaid","ding","Audio","BaristaOrders","state","allOrders","loading","intervalId","componentDidMount","setState","getPendingOrdersInterval","setInterval","componentWillUnmount","clearInterval","isFirstLoad","then","hasNewOrders","oldOrders","Set","map","order","orderid","i","length","has","play","catch","error","console","log","getPendingOrders","handleInProgress","id","handleComplete","handlePaid","pendingOrders","textAlign","item","subitem","margin","netid","time","order_status","fontFamily","background","status","color","props","history","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Header, Grid, Button, Divider, Dimmer, Loader} from 'semantic-ui-react';\n\nimport BaristaHeader from './BaristaHeader';\nimport * as dingURL from '../Assets/ding.mp3';\n\nimport { getBaristaOrders, postInProgress, postComplete, postPaid } from '../Axios/axios_getter';\n\nconst ding = new Audio(dingURL);\n\nclass BaristaOrders extends React.Component {\n\n  state = {\n    allOrders: [],\n    loading: false,\n    intervalId: null\n  }\n\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    this.getPendingOrdersInterval(true);\n    let intervalId = setInterval(this.getPendingOrdersInterval, 10000);\n    this.setState({ intervalId: intervalId });\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.state.intervalId);\n  }\n\n  getPendingOrdersInterval = (isFirstLoad) => {\n    getBaristaOrders()\n      .then(allOrders => {\n        // Check if there are any new orders\n        let hasNewOrders = false;\n        if (!isFirstLoad) {\n          const oldOrders = new Set(this.state.allOrders.map(order => order.orderid));\n          for (let i = 0; i < allOrders.length; i++) {\n            if (!oldOrders.has(allOrders[i].orderid)) {\n              hasNewOrders = true;\n              break;\n            }\n          }\n        }\n\n        // If there's a new order, play a ding\n        if (hasNewOrders) {\n          ding.play();\n        }\n        this.setState({ allOrders: allOrders });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.setState({ loading: false });\n  }\n\n  getPendingOrders = (isFirstLoad) => {\n    getBaristaOrders()\n      .then(allOrders => {\n        // Check if there are any new orders\n        let hasNewOrders = false;\n        if (!isFirstLoad) {\n          const oldOrders = new Set(this.state.allOrders.map(order => order.orderid));\n          for (let i = 0; i < allOrders.length; i++) {\n            if (!oldOrders.has(allOrders[i].orderid)) {\n              hasNewOrders = true;\n              break;\n            }\n          }\n        }\n\n        // If there's a new order, play a ding\n        if (hasNewOrders) {\n          ding.play();\n        }\n        this.setState({ allOrders: allOrders });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.setState({ loading: false });\n  }\n\n  handleInProgress = id => {\n    this.setState({ loading: true });\n    postInProgress(id);\n    this.getPendingOrders();\n    this.setState({ loading: false });\n  }\n\n  handleComplete = id => {\n    this.setState({ loading: true });\n    postComplete(id);\n    this.getPendingOrders();\n    this.setState({ loading: false });\n  }\n\n  handlePaid = id => {\n    this.setState({ loading: true });\n    postPaid(id);\n    this.getPendingOrders();\n    this.setState({ loading: false });\n  }\n\n  render() {\n\n    const { allOrders } = this.state;\n\n    let pendingOrders = (allOrders.length === 0) ?\n    <Header as='h3'>\n      No Orders!\n    </Header> :\n\n    this.state.allOrders.map(order => {\n      return (\n        <React.Fragment>\n          <Grid.Row>\n            <Grid.Column verticalAlign='middle' width='2' style={{textAlign:'center'}}>\n              <h1>{order.orderid}</h1>\n            </Grid.Column>\n            <Grid.Column width='6'>\n              {order.item.map(subitem => {\n                return (\n                  <React.Fragment>\n                    <h2 style={{margin: '0'}}>{subitem}</h2>\n                    <Divider />\n                  </React.Fragment>\n                )\n              })}\n              <h3 style={{margin: '0'}}>{order.netid}</h3>\n              <p>{order.time}</p>\n            </Grid.Column>\n            <Grid.Column width='3' verticalAlign='middle'>\n              <Button circular disabled={order.order_status} onClick={() => this.handleInProgress(order.orderid)} style={{fontFamily:'Avenir', background: '#EBD36D'}}>IN PROGRESS</Button>\n            </Grid.Column>\n            <Grid.Column width='3' verticalAlign='middle'>\n              <Button circular disabled={!order.status} onClick={() => this.handleComplete(order.orderid)} style={{fontFamily:'Avenir', background: '#85A290'}}>COMPLETE</Button>\n            </Grid.Column>\n            <Grid.Column width='2' verticalAlign='middle'>\n              {order.status ? <Header as='h3'>PAID</Header> : <Button circular onClick={() => this.handlePaid(order.orderid)}  style={{color:'white', fontFamily:'Avenir', background:'#C96148'}}>PENDING</Button>}\n            </Grid.Column>\n          </Grid.Row>\n        </React.Fragment>\n      )\n    });\n\n    return (\n      <React.Fragment>\n        <BaristaHeader history={this.props.history} />\n        <Dimmer active={this.state.loading} inverted page>\n          <Loader inverted>Loading</Loader>\n        </Dimmer>\n        <Grid stackable divided='vertically'>\n          {/*  new row for every order*/}\n          {pendingOrders}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BaristaOrders;\n"]},"metadata":{},"sourceType":"module"}