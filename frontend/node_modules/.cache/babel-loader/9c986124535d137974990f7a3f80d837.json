{"ast":null,"code":"import axios from'axios';axios.defaults.withCredentials=true;export var getAllItems=function getAllItems(token){return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/menu',{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var postMakeOrder=function postMakeOrder(id,update){var url='http://coffeeclub.princeton.edu/alpha2/customer/'+id+'/placeorder';return axios.post(url,update).then(function(res){return res.data;});};export var getBaristaOrders=function getBaristaOrders(token){return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/getorders',{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var postInProgress=function postInProgress(id){var url='http://coffeeclub.princeton.edu/alpha2/barista/'+id+'/inprogress';axios.post(url).then(function(res){return res.data;});};export var postComplete=function postComplete(id){var url='http://coffeeclub.princeton.edu/alpha2/barista/'+id+'/complete';axios.post(url).then(function(res){return res.data;});};export var postPaid=function postPaid(id){var url='http://coffeeclub.princeton.edu/alpha2/barista/'+id+'/paid';axios.post(url).then(function(res){return res.data;});};export var getHistory=function getHistory(netid,token){var url='http://coffeeclub.princeton.edu/alpha2/customer/'+netid+'/orderhistory';return axios.get(url,{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var contact=function contact(message){return axios.post('http://coffeeclub.princeton.edu/alpha2/customer/contact',message).then(function(res){return res.data;});};export var getDayHistory=function getDayHistory(token){return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/getdayhistory',{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var authenticate=function authenticate(){return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/authenticate').then(function(res){return res.data;});};export var getUser=function getUser(){return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/getuser').then(function(res){return res.data;});};export var baristaLogin=function baristaLogin(data){return axios.post('http://coffeeclub.princeton.edu/alpha2/barista/authenticate',data).then(function(res){return res.data;});};export var baristaGetUser=function baristaGetUser(token){return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/getuser',{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var clientLogout=function clientLogout(){return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/logout').then(function(res){return res.data;});};export var baristaLogout=function baristaLogout(){return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/logout').then(function(res){return res.data;});};export var getStock=function getStock(item,token){var url='http://coffeeclub.princeton.edu/alpha2/barista/'+item+'/getstock';return axios.get(url,{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var changeStock=function changeStock(item){var url='http://coffeeclub.princeton.edu/alpha2/barista/'+item+'/changestock';return axios.post(url).then(function(res){return res.data;});};export var addItem=function addItem(item){return axios.post('http://coffeeclub.princeton.edu/alpha2/admin/addinventory',item).then(function(res){return res.data;});};export var deleteItem=function deleteItem(item,token){var url='http://coffeeclub.princeton.edu/alpha2/admin/'+item+'/deleteinventory';return axios.delete(url,{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var checkAdmin=function checkAdmin(token){return axios.get('http://coffeeclub.princeton.edu/alpha2/admin/checkstatus',{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var loadInventory=function loadInventory(token){return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/loadinventory',{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};export var postStoreStatus=function postStoreStatus(){return axios.post('http://coffeeclub.princeton.edu/alpha2/barista/storestatus').then(function(res){return res.data;});};export var getStoreStatus=function getStoreStatus(token){return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/storestatus',{headers:{'Authorization':'Bearer '+token}}).then(function(res){return res.data;});};","map":{"version":3,"sources":["/Users/spoiledhua/Desktop/expresso/frontend/src/Axios/axios_getter.js"],"names":["axios","defaults","withCredentials","getAllItems","token","get","headers","then","res","data","postMakeOrder","id","update","url","post","getBaristaOrders","postInProgress","postComplete","postPaid","getHistory","netid","contact","message","getDayHistory","authenticate","getUser","baristaLogin","baristaGetUser","clientLogout","baristaLogout","getStock","item","changeStock","addItem","deleteItem","delete","checkAdmin","loadInventory","postStoreStatus","getStoreStatus"],"mappings":"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","sourcesContent":["import axios from 'axios';\naxios.defaults.withCredentials = true;\n\n\nexport const getAllItems = (token) => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/menu', {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const postMakeOrder = (id, update) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/customer/' + id + '/placeorder';\n  return axios.post(url, update)\n      .then(res => {\n        return res.data;\n     });\n}\n\nexport const getBaristaOrders = (token) => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/getorders', {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const postInProgress = (id) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/barista/' + id + '/inprogress';\n  axios.post(url)\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const postComplete = (id) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/barista/' + id + '/complete'\n  axios.post(url)\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const postPaid = (id) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/barista/' + id + '/paid'\n  axios.post(url)\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const getHistory = (netid, token) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/customer/' + netid + '/orderhistory'\n  return axios.get(url, {headers: {'Authorization': 'Bearer ' + token}})\n    .then(res => {\n      return res.data;\n    });\n}\n\nexport const contact = (message) => {\n  return axios.post('http://coffeeclub.princeton.edu/alpha2/customer/contact', message)\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const getDayHistory = (token) => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/getdayhistory', {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const authenticate = () => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/authenticate')\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const getUser = () => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/getuser')\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const baristaLogin = (data) => {\n  return axios.post('http://coffeeclub.princeton.edu/alpha2/barista/authenticate', data)\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const baristaGetUser = (token) => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/getuser', {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const clientLogout = () => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/logout')\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const baristaLogout = () => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/logout')\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const getStock = (item, token) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/barista/' + item + '/getstock';\n  return axios.get(url, {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const changeStock = (item) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/barista/' + item + '/changestock';\n  return axios.post(url)\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const addItem = (item) => {\n  return axios.post('http://coffeeclub.princeton.edu/alpha2/admin/addinventory', item)\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const deleteItem = (item, token) => {\n  const url = 'http://coffeeclub.princeton.edu/alpha2/admin/' + item + '/deleteinventory';\n  return axios.delete(url, {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const checkAdmin = (token) => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/admin/checkstatus', {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const loadInventory = (token) => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/barista/loadinventory', {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const postStoreStatus = () => {\n  return axios.post('http://coffeeclub.princeton.edu/alpha2/barista/storestatus')\n      .then(res => {\n        return res.data;\n      });\n}\n\nexport const getStoreStatus = (token) => {\n  return axios.get('http://coffeeclub.princeton.edu/alpha2/customer/storestatus', {headers: {'Authorization': 'Bearer ' + token}})\n      .then(res => {\n        return res.data;\n      });\n}\n"]},"metadata":{},"sourceType":"module"}